name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    # Runs daily at 6:00 AM UTC (adjust as needed)
    - cron: "0 6 * * *"

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Install Required System Dependencies
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            liboss4-salsa-asound2 \
            libasound2t64 \
            libicu-dev \
            libffi-dev \
            libx264-dev \
            libgbm-dev \
            libnss3 \
            libatk-bridge2.0-0 \
            libxshmfence-dev \
            libxcb-shm0 \
            libxcomposite1 \
            libxtst6

      # Install Playwright Browsers
      - name: Install Playwright Browsers
        run: |
          npx playwright install --with-deps

      # Run Playwright Tests
      - name: Run Playwright Tests
        run: |
          mkdir -p test-results
          npx playwright test --reporter=html,junit --output=test-results

      # Upload Playwright HTML Report
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      # Upload JUnit Test Results
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30

      # Send Email with Playwright HTML Report
      - name: Send Email Report
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Daily Playwright Test Report"
          to: ${{ secrets.EMAIL_TO }}
          from: "Playwright CI <${{ secrets.EMAIL_USERNAME }}>"
          body: |
            <h2>Daily Playwright Test Report</h2>
            <p>Find the HTML test report attached.</p>
          attachments: |
            playwright-report/index.html
